LTX Ball Sequence Analysis and Goal

Introduction:
The LTX Balls are programmable juggling balls that can display different colors through built-in LED pixels. Each ball can be programmed with sequences that control how these pixels change colors over time. The balls use a proprietary .prg file format to store these color sequences, where each sequence file contains precise instructions for how many pixels to use (1-4) and what colors they should display at specific times.

Our Goal:
The objective is to understand the system that these .prg files use well enough that we can take a JSON input containing times and colors, and automatically create a .prg file that will make the juggling balls change colors at those specified times. We are specifically focused on creating 4-pixel programs using this approach. Use this understanding of the system to create a python program that takes a json as input and outputs a working .prg file. The format of the json have times as keys and hsv colors as values like this:

{ "pixels": 3, "sequence": { "0": [0, 100, 100], // start Red (H=0) "1500": [120, 100, 100], // at 15 seconds change to Green (H=120) "3500": [240, 100, 100], // at 35 seconds change to Blue (H=240) "6000": [0, 100, 100] // at 60 seconds change to Red (H=0) }}Below are hex dumps of various working .prg files so you can learn the system they are following.
File Analysis:

1. Basic Single-Color Programs:

1px_10_red.prg:
- Uses 1 pixel
- Makes it red for 10 seconds
- Shows basic single-pixel, single-color implementation
- Total file size: 357 bytes (0x165)

=== 1px_10_red.prg ===
00000000  50 52 03 49 4e 05 00 00  00 01 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  01 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000040  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000050  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000060  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165

2px_10_red.prg:
- Uses 2 pixels
- Makes them red for 10 seconds
- Similar to 1px but with pixel count modified in header
- Total file size: 357 bytes (0x165)

=== 2px_10_red.prg ===
00000000  50 52 03 49 4e 05 00 00  00 02 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  02 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000040  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000050  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000060  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


4px_10_red.prg:
- Uses 4 pixels
- Makes them red for 10 seconds
- Base template for 4-pixel sequences
- Total file size: 357 bytes (0x165)

=== 4px_10_red.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  04 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000040  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000050  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000060  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


2. Color Transition Programs:

2px_red_5_green_10_blue_15.prg:
- Uses 2 pixels
- Color sequence: red (5s) → green (10s) → blue (15s)
- Shows how to implement multiple color segments
- Total file size: 995 bytes (0x3E3)

=== 2px_red_5_green_10_blue_15.prg ===
00000000  50 52 03 49 4e 05 00 00  00 02 00 08 01 00 50 49  |PR.IN.........PI|
00000010  3b 00 00 00 03 00 00 00  64 00 59 00 00 00 05 00  |;.......d.Y.....|
00000020  02 00 01 00 00 05 00 00  00 00 00 64 00 85 01 00  |...........d....|
00000030  00 0a 00 02 00 01 00 00  0a 00 00 00 00 00 64 00  |..............d.|
00000040  b1 02 00 00 0f 00 02 00  01 00 00 0f 00 00 00 43  |...............C|
00000050  44 88 03 00 00 2c 01 00  00 ff 00 00 ff 00 00 ff  |D....,..........|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000160  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000170  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000180  00 00 ff 00 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000190  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000200  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000210  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000220  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000230  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000240  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000250  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000260  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000270  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000280  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000290  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002b0  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000002d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000300  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000310  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000320  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000330  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000340  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000350  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000360  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000370  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000380  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000390  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000003b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000003c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 42 54 00  |.............BT.|
000003e0  00 00 00                                          |...|
000003e3

3px_red_15_green_20_blue_25_red_30.prg:
- Uses 3 pixels
- Color sequence: red (15s) → green (20s) → blue (25s) → red (30s)
- Demonstrates longer sequence with color repetition
- Total file size: 1314 bytes (0x522)

=== 3px_red_15_green_20_blue_25_red_30.prg ===
00000000  50 52 03 49 4e 05 00 00  00 03 00 08 01 00 50 49  |PR.IN.........PI|
00000010  4e 00 00 00 04 00 00 00  64 00 6c 00 00 00 0f 00  |N.......d.l.....|
00000020  03 00 01 00 00 0f 00 00  00 00 00 64 00 98 01 00  |...........d....|
00000030  00 14 00 03 00 01 00 00  14 00 00 00 00 00 64 00  |..............d.|
00000040  c4 02 00 00 19 00 03 00  01 00 00 19 00 00 00 00  |................|
00000050  00 64 00 f0 03 00 00 1e  00 03 00 01 00 00 1e 00  |.d..............|
00000060  00 00 43 44 b4 04 00 00  90 01 00 00 ff 00 00 ff  |..CD............|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000160  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000170  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000180  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000190  00 00 ff 00 00 ff 00 00  00 ff 00 00 ff 00 00 ff  |................|
000001a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000200  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000210  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000220  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000230  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000240  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000250  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000260  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000270  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000280  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000290  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000002a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002c0  00 00 ff 00 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000002e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000300  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000310  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000320  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000330  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000340  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000350  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000360  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000370  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000380  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000390  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000003a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000003c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000003d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
*
00000400  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000410  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000420  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000430  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000440  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000450  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000460  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000470  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000480  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000490  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000004a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000004b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000004c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000004d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000004e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000004f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000500  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000510  ff 00 00 ff 00 00 ff 00  00 ff 00 00 42 54 00 00  |............BT..|
00000520  00 00                                             |..|
00000522

4px_red_10_green_10.prg:
- Uses 4 pixels
- Color sequence: red (10s) → green (10s)
- Shows basic two-color transition
- Total file size: 676 bytes (0x2A4)

=== 4px_red_10_green_10.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  28 00 00 00 02 00 00 00  64 00 46 00 00 00 0a 00  |(.......d.F.....|
00000020  04 00 01 00 00 0a 00 00  00 00 00 64 00 72 01 00  |...........d.r..|
00000030  00 0a 00 04 00 01 00 00  0a 00 00 00 43 44 5c 02  |............CD\.|
00000040  00 00 c8 00 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000050  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000060  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000070  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000080  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000090  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000e0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000f0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000100  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000110  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000120  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000130  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000140  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000150  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000160  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000170  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000180  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000190  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001e0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001f0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000200  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000210  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000220  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000230  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000240  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000250  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000260  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000270  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000280  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000290  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 42 54  |..............BT|
000002a0  10 27 00 00                                       |.'..|
000002a4

3. Duration Variations:

4px_blue_10.prg, 

=== 4px_blue_10.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  01 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000040  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000050  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


4px_green_100.prg, 4px_blue_100.prg:
- Each uses 4 pixels
- Shows single color for 100 seconds
- Demonstrates how longer durations are handled
- Total file size: 357 bytes (0x165)

=== 4px_green_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  04 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000040  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000050  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000060  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000070  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000080  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000090  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000e0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000f0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000100  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000110  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000120  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000130  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000140  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000150  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


=== 4px_blue_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  04 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000040  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000050  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


4. Complex Sequences:

4px_red_100_green_100_blue_100.prg:
- Uses 4 pixels
- Color sequence: red (100s) → green (100s) → blue (100s)
- Shows how longer multi-color sequences are structured
- Total file size: 995 bytes (0x3E3)

=== 4px_red_100_green_100_blue_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  3b 00 00 00 03 00 01 00  64 00 59 00 00 00 00 00  |;.......d.Y.....|
00000020  04 00 01 00 00 64 00 00  00 01 00 64 00 85 01 00  |.....d.....d....|
00000030  00 00 00 04 00 01 00 00  64 00 00 00 01 00 64 00  |........d.....d.|
00000040  b1 02 00 00 00 00 04 00  01 00 00 64 00 00 00 43  |...........d...C|
00000050  44 88 03 00 00 2c 01 00  00 ff 00 00 ff 00 00 ff  |D....,..........|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000160  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000170  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000180  00 00 ff 00 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000190  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000200  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000210  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000220  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000230  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000240  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000250  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000260  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000270  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000280  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000290  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002b0  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000002d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000300  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000310  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000320  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000330  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000340  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000350  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000360  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000370  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000380  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000390  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000003b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000003c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 42 54 00  |.............BT.|
000003e0  00 00 00                                          |...|
000003e3


Python Code Example Analysis:

The generate_1px_red_10.py script demonstrates how to create these .prg files programmatically. Here's the code and explanation:

```python
#!/usr/bin/env python3
"""
This script creates a file named "gen_1px_red_10.prg" that is
byte-for-byte identical to the known–good 1px_red_10.prg file (357 bytes).
It produces a 1-pixel sequence that stays red for 10 seconds.

The pixel data block is built as a continuous 304-byte stream:
  - It starts with a 3-byte prefix of 0x00.
  - The remainder is filled with the 3-byte red pattern ("ff 00 00")
    repeated enough times (301 bytes total = 100 full cycles plus 1 extra byte).
  - The very last byte is then replaced with 0x42.
Because 16 (the row size) is not a multiple of 3, slicing the 304-byte
stream into 16-byte rows produces rows that are offset relative to one another,
which is exactly what the working file does.
"""

def create_1px_red_10():
    # --- Header (48 bytes) ---
    header_hex = (
        "50 52 03 49 4e 05 00 00 "  # Offsets 0x00–0x07: Magic "PR.IN" and version info
        "00 01 00 08 01 00 50 49 "  # Offsets 0x08–0x0F: Pixel count = 1, etc.
        "15 00 00 00 01 00 01 00 "  # Offsets 0x10–0x17: Segment count = 1, etc.
        "64 00 33 00 00 00 00 00 "  # Offsets 0x18–0x1F: Timing/duration fields (0x64 = 100)
        "01 00 01 00 00 64 00 00 "  # Offsets 0x20–0x27: More header data (pixel count, duration, etc.)
        "00 43 44 30 01 00 00 64"   # Offsets 0x28–0x2F: Literal "CD0", then 0x64, etc.
    )
    header = bytes.fromhex(header_hex)
    assert len(header) == 48

    # --- Pixel Data Block (304 bytes) ---
    N = 304
    # Start with a prefix of 3 bytes (to force the proper offset).
    prefix = b"\x00\x00\x00"
    # Then fill the remaining bytes with repeated "ff 00 00".
    remaining = N - len(prefix)  # 304 - 3 = 301 bytes
    red_pattern = b"\xff\x00\x00"  # 3 bytes for red
    repeat_count = remaining // len(red_pattern)  # 301 // 3 = 100
    remainder = remaining % len(red_pattern)        # 301 % 3 = 1
    body = red_pattern * repeat_count + red_pattern[:remainder]
    # Build the continuous 304-byte pixel block.
    pixel_block = prefix + body
    assert len(pixel_block) == 304
    # Force the very last byte to be 0x42.
    pixel_block = bytearray(pixel_block)
    pixel_block[-1] = 0x42
    pixel_block = bytes(pixel_block)

    # --- Footer (5 bytes) ---
    footer = bytes.fromhex("54 00 00 00 00")  # "T" (0x54) followed by four 0x00 bytes

    # --- Assemble the full file ---
    # Total file size = header (48) + pixel block (304) + footer (5) = 357 bytes.
    file_data = header + pixel_block + footer
    assert len(file_data) == 357, f"File size is {len(file_data)}, expected 357"

    with open("gen_1px_red_10.prg", "wb") as f:
        f.write(file_data)
    print("Created gen_1px_red_10.prg with", len(file_data), "bytes")
```

Key Points from the Code:

1. File Structure:
   - Header (48 bytes): Contains magic numbers, version info, pixel count, timing data
   - Pixel Data Block (304 bytes): Contains the color information
   - Footer (5 bytes): Contains end marker

2. Critical Implementation Details:
   - The pixel data block must be a continuous stream
   - It starts with a 3-byte prefix of zeros
   - Color patterns are 3-byte RGB values (e.g., red is "ff 00 00")
   - The last byte of the pixel block must be 0x42
   - Total file size must be exactly 357 bytes for simple sequences

3. Color Pattern Implementation:
   - Colors are represented as RGB triplets (3 bytes each)
   - Red: ff 00 00
   - Green: 00 ff 00
   - Blue: 00 00 ff

=== gen_1px_red_10.prg ===
00000000  50 52 03 49 4e 05 00 00  00 01 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  01 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000040  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000050  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000060  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165

This analysis provides the foundation for creating a system that can generate .prg files from JSON color/timing specifications. The key will be adapting the header for multiple segments and properly constructing the continuous pixel data stream for color transitions.
- Shows single color for 100 seconds
- Demonstrates how longer durations are handled
- Total file size: 357 bytes (0x165)

=== 4px_green_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  04 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000040  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000050  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000060  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000070  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000080  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000090  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000e0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000f0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000100  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000110  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000120  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000130  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000140  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000150  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


=== 4px_blue_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  04 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000040  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000050  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165


4. Complex Sequences:

4px_red_100_green_100_blue_100.prg:
- Uses 4 pixels
- Color sequence: red (100s) → green (100s) → blue (100s)
- Shows how longer multi-color sequences are structured
- Total file size: 995 bytes (0x3E3)

=== 4px_red_100_green_100_blue_100.prg ===
00000000  50 52 03 49 4e 05 00 00  00 04 00 08 01 00 50 49  |PR.IN.........PI|
00000010  3b 00 00 00 03 00 01 00  64 00 59 00 00 00 00 00  |;.......d.Y.....|
00000020  04 00 01 00 00 64 00 00  00 01 00 64 00 85 01 00  |.....d.....d....|
00000030  00 00 00 04 00 01 00 00  64 00 00 00 01 00 64 00  |........d.....d.|
00000040  b1 02 00 00 00 00 04 00  01 00 00 64 00 00 00 43  |...........d...C|
00000050  44 88 03 00 00 2c 01 00  00 ff 00 00 ff 00 00 ff  |D....,..........|
00000060  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000070  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000080  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000090  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000100  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000110  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000120  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000130  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000140  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000150  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000160  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000170  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000180  00 00 ff 00 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000190  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001a0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001b0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000001d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000001e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000001f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000200  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000210  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000220  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000230  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000240  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000250  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000260  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000270  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000280  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000290  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002b0  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002c0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000002d0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000002e0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000002f0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000300  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000310  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000320  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000330  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000340  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000350  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000360  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000370  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000380  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000390  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003a0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000003b0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000003c0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000003d0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 42 54 00  |.............BT.|
000003e0  00 00 00                                          |...|
000003e3


Python Code Example Analysis:

The generate_1px_red_10.py script demonstrates how to create these .prg files programmatically. Here's the code and explanation:

```python
#!/usr/bin/env python3
"""
This script creates a file named "gen_1px_red_10.prg" that is
byte-for-byte identical to the known–good 1px_red_10.prg file (357 bytes).
It produces a 1-pixel sequence that stays red for 10 seconds.

The pixel data block is built as a continuous 304-byte stream:
  - It starts with a 3-byte prefix of 0x00.
  - The remainder is filled with the 3-byte red pattern ("ff 00 00")
    repeated enough times (301 bytes total = 100 full cycles plus 1 extra byte).
  - The very last byte is then replaced with 0x42.
Because 16 (the row size) is not a multiple of 3, slicing the 304-byte
stream into 16-byte rows produces rows that are offset relative to one another,
which is exactly what the working file does.
"""

def create_1px_red_10():
    # --- Header (48 bytes) ---
    header_hex = (
        "50 52 03 49 4e 05 00 00 "  # Offsets 0x00–0x07: Magic "PR.IN" and version info
        "00 01 00 08 01 00 50 49 "  # Offsets 0x08–0x0F: Pixel count = 1, etc.
        "15 00 00 00 01 00 01 00 "  # Offsets 0x10–0x17: Segment count = 1, etc.
        "64 00 33 00 00 00 00 00 "  # Offsets 0x18–0x1F: Timing/duration fields (0x64 = 100)
        "01 00 01 00 00 64 00 00 "  # Offsets 0x20–0x27: More header data (pixel count, duration, etc.)
        "00 43 44 30 01 00 00 64"   # Offsets 0x28–0x2F: Literal "CD0", then 0x64, etc.
    )
    header = bytes.fromhex(header_hex)
    assert len(header) == 48

    # --- Pixel Data Block (304 bytes) ---
    N = 304
    # Start with a prefix of 3 bytes (to force the proper offset).
    prefix = b"\x00\x00\x00"
    # Then fill the remaining bytes with repeated "ff 00 00".
    remaining = N - len(prefix)  # 304 - 3 = 301 bytes
    red_pattern = b"\xff\x00\x00"  # 3 bytes for red
    repeat_count = remaining // len(red_pattern)  # 301 // 3 = 100
    remainder = remaining % len(red_pattern)        # 301 % 3 = 1
    body = red_pattern * repeat_count + red_pattern[:remainder]
    # Build the continuous 304-byte pixel block.
    pixel_block = prefix + body
    assert len(pixel_block) == 304
    # Force the very last byte to be 0x42.
    pixel_block = bytearray(pixel_block)
    pixel_block[-1] = 0x42
    pixel_block = bytes(pixel_block)

    # --- Footer (5 bytes) ---
    footer = bytes.fromhex("54 00 00 00 00")  # "T" (0x54) followed by four 0x00 bytes

    # --- Assemble the full file ---
    # Total file size = header (48) + pixel block (304) + footer (5) = 357 bytes.
    file_data = header + pixel_block + footer
    assert len(file_data) == 357, f"File size is {len(file_data)}, expected 357"

    with open("gen_1px_red_10.prg", "wb") as f:
        f.write(file_data)
    print("Created gen_1px_red_10.prg with", len(file_data), "bytes")
```

Key Points from the Code:

1. File Structure:
   - Header (48 bytes): Contains magic numbers, version info, pixel count, timing data
   - Pixel Data Block (304 bytes): Contains the color information
   - Footer (5 bytes): Contains end marker

2. Critical Implementation Details:
   - The pixel data block must be a continuous stream
   - It starts with a 3-byte prefix of zeros
   - Color patterns are 3-byte RGB values (e.g., red is "ff 00 00")
   - The last byte of the pixel block must be 0x42
   - Total file size must be exactly 357 bytes for simple sequences

3. Color Pattern Implementation:
   - Colors are represented as RGB triplets (3 bytes each)
   - Red: ff 00 00
   - Green: 00 ff 00
   - Blue: 00 00 ff

=== gen_1px_red_10.prg ===
00000000  50 52 03 49 4e 05 00 00  00 01 00 08 01 00 50 49  |PR.IN.........PI|
00000010  15 00 00 00 01 00 01 00  64 00 33 00 00 00 00 00  |........d.3.....|
00000020  01 00 01 00 00 64 00 00  00 43 44 30 01 00 00 64  |.....d...CD0...d|
00000030  00 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000040  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000050  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000060  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000070  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000080  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000090  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000a0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000b0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000c0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
000000d0  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
000000e0  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
000000f0  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000100  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000110  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000120  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 ff  |................|
00000130  00 00 ff 00 00 ff 00 00  ff 00 00 ff 00 00 ff 00  |................|
00000140  00 ff 00 00 ff 00 00 ff  00 00 ff 00 00 ff 00 00  |................|
00000150  ff 00 00 ff 00 00 ff 00  00 ff 00 00 ff 00 00 42  |...............B|
00000160  54 00 00 00 00                                    |T....|
00000165

This analysis provides the foundation for creating a system that can generate .prg files from JSON color/timing specifications. The key will be adapting the header for multiple segments and properly constructing the continuous pixel data stream for color transitions.